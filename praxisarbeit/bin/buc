#!/bin/bash 

cwd=`pwd`
cd `dirname $0`	
BINDIR=`pwd`
cd $cwd	
BASENAME=`basename $0`
LOGDIR=$BINDIR/../var
ETCDIR=$BINDIR/../etc

usage() {
	echo "usage: $BASENAME [-phv] [path to user file]"
}

# TODO: Add a log function (Es soll ein logfile mit einem einheitlichen Format geschrieben werden.)
source ./bucb.utils

source $ETCDIR/bucb.env

while getopts p:h:v: optvar; do
	case $optvar in
		p) DEFAULT_PASSWORD=${OPTARG} ;;
		h) echo "!!" ;;
		v) input_file=${OPTARG} && echo "!!: ${OPTARG}" ;;
		*) usage && exit 1 ;;
	esac
done

cat $1 | while read username groupname name_first name_last ; do

  if [ "$(getent passwd $user)" ]; then
    echo "User already exists" # ! Es soll eine Warnung ausgeben falls der User schon existiert...

    if [ "$(getent passwd $user | cut -d: -f6)" ]; then
      echo "Create user home..." # TODO: ...und das User-Home-Verzeichnis nicht soll es mit dir Skeleton-Template-Umgebung erstellt werden.
    fi

    continue # ! dann nichts tun
  fi

	if [ ! $(getent group "$groupname") ]; then 
		addgroup $groupname # ! Es soll eine neue Gruppe anlegen falls die Gruppe noch nicht existiert
		echo "[WARNING] Group $groupname does not exist! Creating new group." # ! Es soll pr체fen, ob die Gruppe mit dem existiert, falls nicht eine Warnung ausgeben.
	fi

  # TODO: Show a warning in case the user's group homes are not being backed-up by bulk user backup. (Es soll 체berpr체fen ob die Gruppe eine der Gruppen ist, die im Skript 2 auch gesichert werden. Ansonsten soll eine Warnung ausgegeben werden, dass das Userhome nicht gesichert wird.)

	useradd "$username" -c "$name_first $name_last" -G "$groupname" -p "$(openssl passwd -1 $DEFAULT_PASSWORD)" # TODO: Use skel for home and FIX: default password (Es soll je nach Gruppe einer anderer Skeleton-Template-Umgebung das User-Home-Verzeichnis einrichten) AND (Es soll ein konfigurierbares default passwort setzen, welches beim ersten login ge채ndert werden muss)
done